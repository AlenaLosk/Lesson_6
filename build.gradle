plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id 'io.freefair.lombok' version '6.0.0-m2'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.19.0',
    selenideVersion = '6.7.2',
    junitVersion = '5.9.0',
    slf4jVersion = '1.7.36',
    restAssuredVersion = '5.1.1',
    javafakerVersion = '1.0.2',
    assertjVersion = '3.23.1',
    aspectjVersion = '1.9.9.1'


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}



dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion")
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {}